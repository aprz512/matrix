apply plugin: 'groovy'
apply plugin: 'java'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile gradleApi()
    compile localGroovy()
    compile project(':matrix-commons')
    compile group: 'org.ow2.asm', name: 'asm', version: '5.1'
    compile group: 'org.ow2.asm', name: 'asm-commons', version: '5.1'
    compile 'com.android.tools.build:gradle:2.1.0'
    compile project(':matrix-arscutil')
}
sourceSets {
    main {
        groovy {
            srcDir '../matrix-gradle-plugin/src/main/groovy'
        }

        java {
            srcDir "../matrix-gradle-plugin/src/main/java"
        }

        resources {
            srcDir '../matrix-gradle-plugin/src/main/resources'
        }
    }
}

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

compileGroovy {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

if("External" == rootProject.ext.PUBLISH_CHANNEL) {
    apply from: rootProject.file('gradle/java-publish.gradle')
}
else {
    apply from: rootProject.file('gradle/WeChatPublish.gradle')
    wechatPublish {
        artifactId = POM_ARTIFACT_ID
    }
}

// 上面达成了 jar 包
// 这里直接发布到本地，方便测试
apply plugin: 'maven'

uploadArchives{
    repositories.mavenDeployer{
        // 配置本地仓库路径，项目根目录下的repository目录中
        repository(url: uri('E:\\maven\\repository'))
        pom.groupId = "com.tencent"// 唯一标识（通常为模块包名，也可以任意）
        pom.artifactId = "matrix" // 项目名称（通常为类库模块名称，也可以任意）
        pom.version = "1.0.1"      // 版本号
    }
}

